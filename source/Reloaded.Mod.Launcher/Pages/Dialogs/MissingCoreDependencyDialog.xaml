<default:ReloadedWindow x:Class="Reloaded.Mod.Launcher.Pages.Dialogs.MissingCoreDependencyDialog"
                xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                xmlns:local="clr-namespace:Reloaded.Mod.Launcher.Pages.Dialogs"
                xmlns:default="clr-namespace:Reloaded.WPF.Theme.Default;assembly=Reloaded.WPF.Theme.Default"
                xmlns:converters="clr-namespace:Reloaded.Mod.Launcher.Converters"
                mc:Ignorable="d"
                Height="Auto" 
                Width="500"
                SizeToContent="Height"
                WindowStartupLocation="CenterOwner"
                Title="{DynamicResource MissingDependenciesTitle}"
                Style="{DynamicResource ReloadedWindow}">
    <Grid Margin="{DynamicResource PageMarginSmall}" DataContext="{Binding Path=ViewModel, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Window}}}">
        <StackPanel>
            <TextBlock Text="{DynamicResource MissingDependenciesText}" 
                       Margin="{DynamicResource CommonItemCombinedMarginSmaller}"
                       Style="{DynamicResource RIIDefaultTextBlock}"
                       TextWrapping="Wrap"/>
            <DataGrid 
                ItemsSource="{Binding Dependencies, UpdateSourceTrigger=PropertyChanged}"
                Margin="{DynamicResource CommonItemCombinedMarginSmaller}"
                CanUserResizeColumns="False"
                CanUserResizeRows="False"
                CanUserAddRows="False"
                CanUserDeleteRows="False"
                CanUserSortColumns="False"
                CanUserReorderColumns="False"

                IsReadOnly="True"
                AutoGenerateColumns="False"
                HorizontalContentAlignment="Center"
                VerticalContentAlignment="Center">

                <DataGrid.Columns>
                    <DataGridTextColumn Header="{DynamicResource CreateModDialogName}" Binding="{Binding FriendlyName}" Width="*" IsReadOnly="True" />
                </DataGrid.Columns>
            </DataGrid>
            <TextBlock Text="{DynamicResource MissingDependenciesText3}" 
                       Margin="{DynamicResource CommonItemCombinedMarginSmaller}"
                       Style="{DynamicResource RIIDefaultTextBlock}"
                       TextWrapping="Wrap"/>

            <!-- Download Progress and Button -->
            <Grid Margin="{DynamicResource CommonItemCombinedMarginSmaller}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="{DynamicResource GridInterPanelMargin}"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <ProgressBar Grid.Column="0"
                             Height="{Binding Path=Height, ElementName=DownloadButton}"
                             Value="{Binding Progress, UpdateSourceTrigger=PropertyChanged}"
                             Maximum="100" />

                <Button Grid.Column="2" 
                        Content="{DynamicResource UpdateModDownload}" 
                        x:Name="DownloadButton"
                        IsEnabled="{Binding CanDownload}"
                        Click="DownloadButtonClick"/>
            </Grid>

            <!-- Current Step Display -->
            <TextBlock Text="{Binding CurrentStep, UpdateSourceTrigger=PropertyChanged}" 
                       Margin="{DynamicResource CommonItemCombinedMarginSmaller}"
                       Style="{DynamicResource RIIDefaultTextBlock}"
                       TextWrapping="Wrap"
                       HorizontalAlignment="Center"
                       Visibility="{Binding CurrentStep, Converter={x:Static converters:StringToVisibilityConverter.Instance}}" />
        </StackPanel>
    </Grid>
</default:ReloadedWindow>
